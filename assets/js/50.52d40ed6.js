(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{360:function(s,t,n){"use strict";n.r(t);var a=n(40),e=Object(a.a)({},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"tip custom-block"},[n("p",[s._v("今天的话终于把网易云音乐的第二节课给完成了，总有一种重新步入正轨的感觉，争取在十二月到来之前把网易云音乐的毕设完成。刚才和同学打了几把王者，打完之后心情很差，这游戏当真是没什么意思，以后还是尽量少玩好了。")])]),s._v(" "),n("p",[s._v("赢了我也不是谈不上多开心，赢不了就很难受了。还是回来写博客调整一下心情吧。")]),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:"20181123A/001.jpg",alt:"失败"}})]),n("p"),s._v(" "),n("p",[s._v("今天的主题是this，this同样是的JS押题的重要内容，这回我就把这个知识点整理一下。讲到押题我的心情又差了几分，前天去笔试信心满满地写了两页纸，结果还是和我说我不适合这项工作，让我有点失望。那份试卷我带回来了，感觉自己虽然写了很多，但是还有很多地方答的并不好。这一次试水虽然没有能够给我更多的自信心，但是也起到了让我发现自己不足的作用，到时候争取吧这张试卷上不明白的问题全都搞清楚。")]),s._v(" "),n("p",[s._v("this和闭包都是很早就接触过的知识点。在学习函数调用的时候学过两种方法，普通的括号调用和call()方法调用。那时候知道this就是使用call()方法调用函数时传入的第一个参数。所以只要是使用call()方法，就很很容易就搞明白this是什么了，但是大部分时候在平时调用函数的时候很少会去用this，尽管老师之前一直叫多用this，不然就不知道this是什么……")]),s._v(" "),n("p",[s._v("所以这篇博客的目的就是把所有情况下this的指向搞清楚，一次性解决这个问题，接下来就开始正题了。")]),s._v(" "),n("h2",{attrs:{id:"一、this是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、this是什么？","aria-hidden":"true"}},[s._v("#")]),s._v(" 一、this是什么？")]),s._v(" "),n("p",[s._v("MDN里面没有直接说this是什么，阮一峰老师的教程里说的倒是比较简单易懂：")]),s._v(" "),n("blockquote",[n("p",[s._v("this就是属性或方法“当前”所在的对象。")])]),s._v(" "),n("p",[s._v("这句话应该适用于大部分使用场合，看起来也很容易理解，在大多数的时候就这样去想也没有问题。但是在碰到多种this的嵌套的时候也难免晕头转向，所以要把不同场合下this是什么都给整明白，以后遇到this的问题才能游刃有余。")]),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:"20181123A/002.jfif",alt:"困惑"}})]),n("p"),s._v(" "),n("h3",{attrs:{id:"_1、全局环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、全局环境","aria-hidden":"true"}},[s._v("#")]),s._v(" 1、全局环境")]),s._v(" "),n("p",[s._v("无论是否在严格模式下，在全局环境中（在任何函数体外部）this 都指代全局对象。在浏览器中, window 对象同时也是全局对象。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('console.log(this === window); // true\n\na = 37;\nconsole.log(window.a); // 37\n\nthis.b = "MDN";\nconsole.log(window.b)  // "MDN"\nconsole.log(b)         // "MDN"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"_2、简单调用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、简单调用","aria-hidden":"true"}},[s._v("#")]),s._v(" 2、简单调用")]),s._v(" "),n("p",[s._v("在函数内部，this的值取决于函数被调用的方式。下面的代码不在严格模式下，且 this 的值不是由该调用设置的，所以 this 的值默认指向全局对象。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function f1(){\n  return this;\n}\n//在浏览器中：\nf1() === window;   //在浏览器中，全局对象是window\n\n//在Node中：\nf1() === global;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("然而，在严格模式下，this将保持他进入执行上下文时的值，所以下面的this将会默认为undefined。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function f2(){\n  "use strict"; // 这里是严格模式\n  return this;\n}\n\nf2() === undefined; // true\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"_3、箭头函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、箭头函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 3、箭头函数")]),s._v(" "),n("p",[s._v("在箭头函数中，this与封闭词法上下文的this保持一致，在全局代码中，它将被设置为全局对象。就是说，箭头函数的this就是这个函数外部作用域的this，它的this被永久绑定到了它外层函数的this，无法使用call、bind、或者apply方法改变箭头函数this的指向：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var globalObject = this;\nvar foo = (() => this);\nconsole.log(foo() === globalObject); // true\n\nvar obj = {foo: foo};\nconsole.log(obj.foo() === globalObject); // true\n\n// 尝试使用call来设定this\nconsole.log(foo.call(obj) === globalObject); // true\n\n// 尝试使用bind来设定this\nfoo = foo.bind(obj);\nconsole.log(foo() === globalObject); // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"_4、作为构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、作为构造函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 4、作为构造函数")]),s._v(" "),n("p",[s._v("当一个函数用作构造函数时（使用new关键字），它的this被绑定到正在构造的新对象：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var Obj = function (p) {\n  this.p = p;\n};\n\nvar o = new Obj('Hello World!');\no.p // \"Hello World!\"\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("上面代码定义了一个构造函数Obj。由于this指向实例对象，所以在构造函数内部定义this.p，就相当于定义实例对象有一个p属性。")]),s._v(" "),n("h3",{attrs:{id:"_5、对象的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、对象的方法","aria-hidden":"true"}},[s._v("#")]),s._v(" 5、对象的方法")]),s._v(" "),n("p",[s._v("当函数作为对象里的方法被调用时，它们的 this 是调用该函数的对象。下面的例子中，当 o.f()被调用时，函数内的this将绑定到o对象：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var o = {\n  prop: 37,\n  f: function() {\n    return this.prop;\n  }\n};\n\nconsole.log(o.f()); // logs 37\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("这样的结果不受函数定义方式或位置的影响。在前面的例子中，在定义对象o的同时，将函数内联定义为成员 f 。但是，也可以先定义函数，然后再将其附属到o.f。这样做的结果也是一样的：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var o = {prop: 37};\n\nfunction independent() {\n  return this.prop;\n}\n\no.f = independent;\n\nconsole.log(o.f()); // logs 37\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("这表明函数是从o的f成员调用的才是重点。同样，this 的绑定只受最靠近的成员引用的影响。在下面的这个例子中，把一个方法g当作对象o.b的函数调用。在这次执行期间，函数中的this将指向o.b。事实证明，这与他是对象 o 的成员没有多大关系，最靠近的引用才是最重要的:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("o.b = {g: independent, prop: 42};\nconsole.log(o.b.g()); // 42\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"_6、原型链中的-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、原型链中的-this","aria-hidden":"true"}},[s._v("#")]),s._v(" 6、原型链中的 this")]),s._v(" "),n("p",[s._v("对于在对象原型链上某处定义的方法，同样的概念也适用。如果该方法存在于一个对象的原型链上，那么this指向的是调用这个方法的对象，就像该方法在对象上一样。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var o = {\n  f: function() { \n    return this.a + this.b; \n  }\n};\nvar p = Object.create(o);\np.a = 1;\np.b = 4;\n\nconsole.log(p.f()); // 5\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("在这个例子中，对象p没有属于它自己的f属性，它的f属性继承自它的原型。虽然在对 f 的查找过程中，最终是在 o 中找到 f 属性的，这并没有关系；查找过程首先从 p.f 的引用开始，所以函数中的 this 指向p。也就是说，因为f是作为p的方法调用的，所以它的this指向了p。")]),s._v(" "),n("h3",{attrs:{id:"_7、dom事件处理函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7、dom事件处理函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 7、DOM事件处理函数")]),s._v(" "),n("p",[s._v("当函数被用作事件处理函数时，它的this指向触发事件的元素：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 获取文档中的所有元素的列表\nvar elements = document.getElementsByTagName('*');\n\n// 将bluify作为元素的点击监听函数，当元素被点击时，就会变成蓝色\nfor(var i=0 ; i<elements.length ; i++){\n  elements[i].addEventListener('click', bluify, false);\n}\n\n// 被调用时，将关联的元素变成蓝色\nfunction bluify(e){\n  console.log(this === e.currentTarget); // 总是 true\n\n  // 当 currentTarget 和 target 是同一个对象时为 true\n  console.log(this === e.target);        \n  this.style.backgroundColor = '#A5D9F3';\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"_8、内联事件处理函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8、内联事件处理函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 8、内联事件处理函数")]),s._v(" "),n("p",[s._v("当代码被内联on-event 处理函数调用时，它的this指向监听器所在的DOM元素：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<button onclick="alert(this.tagName.toLowerCase());">\n  Show this\n</button>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("上面的 alert 会显示button。注意只有外层代码中的this是这样设置的：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<button onclick="alert((function(){return this})());">\n  Show inner this\n</button>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在这种情况下，没有设置内部函数的this，所以它指向 global/window 对象（即非严格模式下调用的函数未设置this时指向的默认对象）。")]),s._v(" "),n("h3",{attrs:{id:"_9、settimeout-里的-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9、settimeout-里的-this","aria-hidden":"true"}},[s._v("#")]),s._v(" 9、setTimeout 里的 this")]),s._v(" "),n("p",[s._v("添加于 2019-3-7 09:10:38")]),s._v(" "),n("p",[s._v("这个点是我看面经看到的，觉得需要补充一下。下面是 "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/setTimeout#%E5%85%B3%E4%BA%8Ethis%E7%9A%84%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDN"),n("OutboundLink")],1),s._v(" 中关于 this 问题的摘抄：")]),s._v(" "),n("p",[s._v("由setTimeout()调用的代码运行在与所在函数完全分离的执行环境上。这会导致，这些代码中包含的 this 关键字在非严格模式会指向 window (或全局)对象，严格模式下为 undefined，这和所期望的this的值是不一样的。正如：")]),s._v(" "),n("div",{staticClass:"language-JavaScript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" myArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zero"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"two"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmyArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("myMethod")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("sProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sProperty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmyArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("myMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// prints "zero,one,two"')]),s._v("\nmyArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("myMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// prints "one"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("myMethod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// prints "[object Window]" after 1 second')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("myMethod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// prints "undefined" after 1.5 seconds')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("解决方法是包装函数，比如：")]),s._v(" "),n("div",{staticClass:"language-JavaScript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("myArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("myMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// prints "zero,one,two" after 2 seconds')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("myArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("myMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// prints "one" after 2.5 seconds')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"二、绑定this的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、绑定this的方法","aria-hidden":"true"}},[s._v("#")]),s._v(" 二、绑定this的方法")]),s._v(" "),n("p",[s._v("因为this太过于灵活，有的时候要把this固定下来，避免出现意外情况。JavaScript 提供了call、apply、bind这三个方法，改变this的指向。")]),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:"20181123A/003.jfif",alt:"明确"}})]),n("p"),s._v(" "),n("h3",{attrs:{id:"_1、function-prototype-call"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、function-prototype-call","aria-hidden":"true"}},[s._v("#")]),s._v(" 1、Function.prototype.call()")]),s._v(" "),n("p",[s._v("函数实例的call方法，这个大家都比较熟悉，可以指定函数内部this的指向（即函数执行时所在的作用域），然后在所指定的作用域中，调用该函数。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var obj = {};\n\nvar f = function () {\n  return this;\n};\n\nf() === window // true\nf.call(obj) === obj // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("call方法的参数，应该是一个对象。如果参数为空、null和undefined，则默认传入全局对象。如果call方法的参数是一个原始值，那么这个原始值会自动转成对应的包装对象，然后传入call方法。call的第一个参数就是this所要指向的那个对象，后面的参数则是函数调用时所需的参数。")]),s._v(" "),n("h3",{attrs:{id:"_2、function-prototype-apply"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、function-prototype-apply","aria-hidden":"true"}},[s._v("#")]),s._v(" 2、Function.prototype.apply()")]),s._v(" "),n("p",[s._v("apply方法的作用与call方法类似，也是改变this指向，然后再调用该函数。唯一的区别就是，它接收一个数组作为函数执行时的参数，使用格式如下。apply方法的第一个参数也是this所要指向的那个对象，如果设为null或undefined，则等同于指定全局对象。第二个参数则是一个数组，该数组的所有成员依次作为参数，传入原函数。原函数的参数，在call方法中必须一个个添加，但是在apply方法中，必须以数组形式添加：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function f(x, y){\n  console.log(x + y);\n}\n\nf.call(null, 1, 1) // 2\nf.apply(null, [1, 1]) // 2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"_3、function-prototype-bind"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、function-prototype-bind","aria-hidden":"true"}},[s._v("#")]),s._v(" 3、Function.prototype.bind()")]),s._v(" "),n("p",[s._v("bind方法用于将函数体内的this绑定到某个对象，然后返回一个新函数，在这个新函数中，this将永久地被绑定到了bind的第一个参数，无论这个函数是如何被调用的：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var counter = {\n  count: 0,\n  inc: function () {\n    this.count++;\n  }\n};\n\nvar obj = {\n  count: 100\n};\nvar func = counter.inc.bind(obj);\nfunc();\nobj.count // 101\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("如果bind方法的第一个参数是null或undefined，等于将this绑定到全局对象，函数运行时this指向顶层对象（浏览器为window）。")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("关于this的博客没想到篇幅也这么长，实际上这篇博客主要是对"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/this",target:"_blank",rel:"noopener noreferrer"}},[s._v("this-JavaScript|MDN"),n("OutboundLink")],1),s._v("与阮一峰的"),n("a",{attrs:{href:"http://JavaScript.ruanyifeng.com/oop/this.html#toc2",target:"_blank",rel:"noopener noreferrer"}},[s._v("this 关键字--JavaScript 标准参考教程（alpha）"),n("OutboundLink")],1),s._v("里面的关于this的内容的一些归纳。借助这次归纳的过程，也算是把this重新学了一遍。")]),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:"20181123A/004.jpg",alt:"失败"}})]),n("p"),s._v(" "),n("p",[s._v("this非常灵活，但是总是要用到它，面试也要考它。所以明白这种情况下的this的指向是很有必要的，但是在实际工作中还是尽量避免使用不确定的this，比如下面的一些情况：")]),s._v(" "),n("ol",[n("li",[s._v("避免多层 this，由于this的指向是不确定的，所以切勿在函数中包含多层的this。")]),s._v(" "),n("li",[s._v("避免数组处理方法中的 this，数组的map和foreach方法，允许提供一个函数作为参数。这个函数内部不应该使用this。")]),s._v(" "),n("li",[s._v("避免回调函数中的 this，回调函数中的this往往会改变指向，最好避免使用。")])])])},[],!1,null,null,null);t.default=e.exports}}]);