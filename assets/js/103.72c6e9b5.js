(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{413:function(t,_,v){"use strict";v.r(_);var e=v(40),a=Object(e.a)({},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"tip custom-block"},[v("p",[t._v("昨晚把《图解 HTTP》的第二章过了一遍，和之前一样，是跟着视频过的。突然感觉自己不管几点钟睡觉都会赖床到十点钟左右，这样下去熬夜不成了必然的吗。比起早睡，似乎早起还是要更难一些。")])]),t._v(" "),v("p",[t._v("这一章的内容没有上一章的多，这一章介绍的内容主要是 HTTP 协议中比较基础的部分，常见的 HTTP 方法之类，问题比较多，也比较散。与 HTTP 方法相关的内容，最开始的博客就已经涉及到，今天就算是把这些相关的内容归纳一下吧。")]),v("div",{staticStyle:{"text-align":"center"}},[v("img",{attrs:{src:"20190924A/4.png",alt:"封面"}})]),v("p"),t._v(" "),v("h3",{attrs:{id:"_1、http-协议的一些基础知识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、http-协议的一些基础知识","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、HTTP 协议的一些基础知识")]),t._v(" "),v("p",[t._v("HTTP 协议用于"),v("strong",[t._v("客户端")]),t._v("和"),v("strong",[t._v("服务器端")]),t._v("之间的通信，发起请求的一端被称为客户端，提供资源响应的一端被称为服务器。两台计算机之间使用 HTTP 协议进行通信时，在一条通信线路上必定有一端是客户端，有一端是服务器，有时候二者角色可能互换。")]),t._v(" "),v("p",[t._v("请求与相应通过报文的交换达成通信，客户端发出的报文是"),v("strong",[t._v("请求报文")]),t._v("，服务端发出的报文是"),v("strong",[t._v("响应报文")]),t._v("，请求与响应的内容都被置于报文里。请求报文与响应报文的具体结构如下图所示：")]),v("div",{staticStyle:{"text-align":"center"}},[v("img",{attrs:{src:"20190924A/1.png",alt:"请求报文"}})]),v("div",{staticStyle:{"text-align":"center"}},[v("img",{attrs:{src:"20190924A/2.png",alt:"响应报文"}})]),v("p"),t._v(" "),v("p",[t._v("HTTP 是一种不保存状态，即"),v("strong",[t._v("无状态协议")]),t._v("。HTTP 协议自身不对请求与响应之间的通信状态进行保存，这是为了更快处理大量的事务。缺点在于有些场景下，是需要记录通信状态的，比如登录的用户信息等。为此，在 HTTP/1.1 版本中就引入了 Cookie 技术，并借此实现状态管理。")]),t._v(" "),v("p",[t._v("HTTP/1.1 还对初始版本做了一些完善。在初始版本中，客户端与服务器之间每进行一次通信就要断开一次 TCP 连接。这样在需要传输的内容较多时，每次情况都会造成无谓的 TCP 连接建立与断开，增加通信量的开销。HTTP/1.1 提出了「"),v("strong",[t._v("持久链接")]),t._v("」的策略，只要一端没有明确提出断开连接，则保持 TCP 连接状态。此外，在 HTTP/1.1 能够做到不用等待响应就发送下一个请求，这被称为「"),v("strong",[t._v("管线化")]),t._v("」技术。在之前的博客中，也对这一部分做了介绍："),v("a",{attrs:{href:"/1903/20190321A"}},[t._v("【归纳】HTTP 协议的发展历程")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"_2、常见的-http-方法及其使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、常见的-http-方法及其使用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 2、常见的 HTTP 方法及其使用场景")]),t._v(" "),v("p",[t._v("接下来将介绍几种常用的 HTTP 方法，其中 HTTP/1.0 定义了三种请求方法：GET、POST 和 HEAD 方法，HTTP/1.1 新增了五种请求方法：OPTIONS、PUT、DELETE、TRACE 和 CONNECT 方法。书中这样介绍了如下方法，这里简单地归纳一下：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("GET")]),t._v("：获取资源。用来访问已被 URI 识别的资源")]),t._v(" "),v("li",[v("strong",[t._v("POST")]),t._v("：传输实体主体。一般使用 POST 而不是 GET 传输实体的主体")]),t._v(" "),v("li",[v("strong",[t._v("PUT")]),t._v(": 传输文件。要求请求报文的主体包含文件内容，然后保存到请求 URI 的指定位置")]),t._v(" "),v("li",[v("strong",[t._v("HEAD")]),t._v("：获得报文首部。和 GET 方法一样，只是不返回报文主体部分")]),t._v(" "),v("li",[v("strong",[t._v("DELETE")]),t._v("：删除文件，与 PUT 相反，按请求 URI 删除指定的资源")]),t._v(" "),v("li",[v("strong",[t._v("OPTIONS")]),t._v("：询问支持的方法。用来查询针对请求 URI 指定的资源支持的方法")]),t._v(" "),v("li",[v("strong",[t._v("TRACE")]),t._v("：追踪路径。一种调试方法，因为并不安全，所以不常用")]),t._v(" "),v("li",[v("strong",[t._v("CONNECT")]),t._v("：创建隧道。在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信")])]),t._v(" "),v("h3",{attrs:{id:"_3、get-与-post-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、get-与-post-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 3、GET 与 POST 的区别")]),t._v(" "),v("p",[t._v("这个也是之前的博客里面提到过的内容了。GET 方法用于"),v("strong",[t._v("获取资源")]),t._v("，POST 用于"),v("strong",[t._v("传输数据")]),t._v("。比如，查看网页即是使用 GET 方法直接获取资源，登录网站就需要使用 POST 方法将数据传输给服务器，服务器才能返回相应的数据。GET 的请求参数 url 里，POST 传输的内容在请求体里，因此，在传输数据的内容长度上，POST 不受 url 的限制。不过，实际上使用 GET 方法也能够传输实体的主体，但一般不用 GET 方法，而使用 POST 方法。")]),t._v(" "),v("p",[t._v("这里只简要地过一下，比较详细的介绍之前总结过了，此外还有 POST 方法和 PUT 方法的区别，这里就不重复介绍了："),v("a",{attrs:{href:"/1812/20181231A"}},[t._v("【押题】HTTP 面试知识")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"_4、什么是-restful-api？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、什么是-restful-api？","aria-hidden":"true"}},[t._v("#")]),t._v(" 4、什么是 RESTful API？")]),t._v(" "),v("p",[t._v("RESTful API 中的 REST 是 Representational State Transfer 的简写，意为资源表现层状态转换。RESTful API 即是符合 "),v("strong",[t._v("REST 规范")]),t._v("设计出来的 API，因此它是一种架构设计思想，而非技术，如果一个 API 符合REST原则，就称它为 RESTful API。")]),t._v(" "),v("p",[t._v("RESTful API 的特点简单来说，就是客户端使用 GET、POST、PUT、DELETE 4 种表示操作方式的动词，对服务端资源进行操作：GET 用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。和 HTML 的语义化标签相似，RESTful API 通过"),v("strong",[t._v("语义化")]),t._v("使得 HTTP 方法更加高效。例如：")]),t._v(" "),v("ul",[v("li",[t._v("GET /books , 列出所有的图书")]),t._v(" "),v("li",[t._v("POST /books , 创建一本图书")]),t._v(" "),v("li",[t._v("PUT /books, 批量更新图书信息")]),t._v(" "),v("li",[t._v("DELETE /books, 删除所有图书")]),t._v(" "),v("li",[t._v("GET /books/10， 获取10号图书详细信息")]),t._v(" "),v("li",[t._v("PUT /books/10， 更新10号图书")]),t._v(" "),v("li",[t._v("PATCH /books/10， 更新10号图书")]),t._v(" "),v("li",[t._v("DELETE /books/10, 删除10号图书")])]),t._v(" "),v("p",[t._v("此外，应该将 API 的版本号放入 URL。例如"),v("code",[t._v("https://api.example.com/v1/products")]),t._v("即为 v1 版本的 API，借此可以方便和直观地进行版本控制。")]),t._v(" "),v("h3",{attrs:{id:"_5、在-html-的-form-标签里，method-支持哪些类型？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5、在-html-的-form-标签里，method-支持哪些类型？","aria-hidden":"true"}},[t._v("#")]),t._v(" 5、在 HTML 的 form 标签里，method 支持哪些类型？")]),t._v(" "),v("p",[t._v("这也是一个老知识点了，早在最开始学表单标签的时候就了解过这个特点，只是当时可能对 GET 和 POST 也不甚清楚。浏览器使用这种 HTTP 方式来提交 表单. 可能的值有 "),v("strong",[t._v("post")]),t._v(" 与 "),v("strong",[t._v("get")]),t._v("。")]),t._v(" "),v("p",[t._v("其中，post 指的是 HTTP POST 方法；表单数据会包含在表单体内然后发送给服务器。get 指的是 HTTP GET 方法；表单数据会附加在 form 标签的 action 属性的 URI 中，并以 '?' 作为分隔符，然后这样得到的 URI 再发送给服务器。")]),t._v(" "),v("h3",{attrs:{id:"_6、http-请求报文与响应报文的格式？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6、http-请求报文与响应报文的格式？","aria-hidden":"true"}},[t._v("#")]),t._v(" 6、HTTP 请求报文与响应报文的格式？")]),t._v(" "),v("p",[t._v("如图所示，报文由"),v("strong",[t._v("报文首部、空行、报文主体")]),t._v("三部分组成。")]),v("div",{staticStyle:{"text-align":"center"}},[v("img",{attrs:{src:"20190924A/3.png",alt:"报文结构"}})]),v("p"),t._v(" "),v("p",[t._v("请求报文与相应报文的结构的差异主要体现在报文首部中，报文的首部内容由以下内容组成：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("请求行")]),t._v("：包含用于请求的方法，请求 URI 和 HTTP 版本。")]),t._v(" "),v("li",[v("strong",[t._v("状态行")]),t._v("：包含表明相应结果的状态码，原因短语和 HTTP 版本。")]),t._v(" "),v("li",[v("strong",[t._v("首部字段")]),t._v("：包含表示请求和响应的各种条件和属性的各类首部。一般有四种首部，分别是：通用首部、请求首部、相应首部和实体首部。")]),t._v(" "),v("li",[v("strong",[t._v("其他")]),t._v("：可能包含 HTTP 的 RFC 里未定义的首部（Cookie 等）")])]),t._v(" "),v("h3",{attrs:{id:"_7、状态码-200、301、302、304、403、404、500、503分别代表什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7、状态码-200、301、302、304、403、404、500、503分别代表什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 7、状态码 200、301、302、304、403、404、500、503分别代表什么？")]),t._v(" "),v("p",[t._v("状态码相关的内容也是最早开始就接触过的了，之前是写过"),v("a",{attrs:{href:"/1809/20180907A"}},[t._v("博客")]),t._v("的。早先在大学的时候也学过，因为一直没有认真学习，所以到现在都不能很好地记住这几个状态码，确实非常惭愧。这次把这本书第四章过了一遍之后，感觉自己对状态码记得印象更深刻了，以往只是死记硬背，现在则是理解居多，这次一次性把这个点过了吧。")]),t._v(" "),v("p",[t._v("下表就是几种常见的状态码及相应的含义。状态码用于告知服务器端返回的请求结果，第一位指定了"),v("strong",[t._v("响应类别")]),t._v("，主要有五种：1（正在处理）、2（正常处理完毕）、3（需要附加操作完成请求）、4（无法处理请求）、5（服务器处理请求出错）：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("状态码")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("200")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("从客户端发来的请求被正确处理了")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("204")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("请求处理成功，但是响应报文没有主体部分")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("206")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("范围请求，只要资源的一部分数据")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("301")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("永久重定向，请求的资源被永久分配到新的 URI")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("302")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("临时重定向，希望用户此次使用新的 URI 访问")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("303")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("与 302 相同，但限制应当使用 GET 方法请求")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("304")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("缓存控制，直接使用客户端缓存资源")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("307")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("与 302 相同，但禁止 POST 变换成 GET")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("400")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("表示请求报文中有语法错误")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("401")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("需要进行认证（如用户登录）")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("403")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("服务器拒绝请求，并告知原因")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("404")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("服务器上没有请求的资源")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("500")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("服务器内部出错")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("503")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("服务器处于超负载或正在停机维护，无法处理请求")])])])]),t._v(" "),v("p",[t._v("这些状态码有几点需要注意的地方：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("204")]),t._v(" 状态下是不允许返回响应主体的，如果还是给报文添加了主体内容，服务器也不会理会，因此客户端也接收不到。")]),t._v(" "),v("li",[t._v("再次请求 "),v("strong",[t._v("301")]),t._v(" 状态下的资源，使用缓存内容时，就不会再向服务器发送请求，而是直接跳转请求重定向后的资源。")]),t._v(" "),v("li",[t._v("301、302、303 响应状态码返回时，几乎所有的浏览器都会"),v("strong",[t._v("将 POST 改成 GET")]),t._v("，并删去请求报文的主体，再向重定向 URI 发送新的请求。")]),t._v(" "),v("li",[v("strong",[t._v("404")]),t._v(" 状态码返回时，并非没有响应主体，服务器也没有出错，可以提供相应的渲染内容。")]),t._v(" "),v("li",[t._v("状态码是一种约定，实际情况下并不一定遵守，因此"),v("strong",[t._v("有时")]),t._v("返回的状态码是错误的。")])]),t._v(" "),v("hr"),t._v(" "),v("p",[t._v("终于把这次的博客给写完了，是在是太摸鱼了这段时间，这篇博客其实也很水。主要是《图解 HTTP》这几章的内容，之前博客多多少少有所归纳，现在这篇博客就是炒炒冷饭罢了。本想在国庆节来把这篇博客写完，可是没想到五天假期下了竟然都没有考虑过这回事，搞到现在工作时间才能写完，又让我感到惭愧了。主要是忙着看 B 站和打麻将去了，没时间搞学习。这样有点不对劲了，明日方舟都戒得了，我还戒不了这两样，有这么多时间还不如肝明日方舟去。这周再立一个一篇博客的 flag 吧。")]),v("div",{staticStyle:{"text-align":"center"}},[v("img",{attrs:{src:"20190924A/5.png",alt:"封底"}})]),v("p")])},[],!1,null,null,null);_.default=a.exports}}]);