(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{394:function(t,a,s){"use strict";s.r(a);var n=s(40),r=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"tip custom-block"},[s("p",[t._v("这两天忙着拜年的事情，并没有做什么事，但是今天还是把这个最简单的项目给优化完成了，这个项目就是用原生 JS 以及在 HTML5 中新增的 "),s("code",[t._v("<canvas>")]),t._v(" 元素实现一个画板。")])]),t._v(" "),s("p",[t._v("虽说这个项目非常简单，但是既然完成了我就一样要做个总结，一是为了能够把项目里的知识点总结一下，二也是为了之后在面试里也可以不会被问到了项目不会太过尴尬。")]),s("div",{staticStyle:{"text-align":"center"}},[s("img",{attrs:{src:"20190206A/timg.jpg",alt:"画板"}})]),s("p"),t._v(" "),s("p",[s("strong",[t._v("随心所欲地涂鸦吧！")])]),t._v(" "),s("h2",{attrs:{id:"franko-画板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#franko-画板","aria-hidden":"true"}},[t._v("#")]),t._v(" Franko 画板")]),t._v(" "),s("h3",{attrs:{id:"一、项目介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、项目介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、项目介绍")]),t._v(" "),s("p",[t._v("此项目是使用原生 JS 实现的在线画板，只需打开页面，你直接就可以开始作画。在作画过程中，你可以自定义你的画笔颜色、粗细，以及画板的背景颜色、宽高等等。作画完成后可以一键保存画作，保证你能够便捷地记录下你一闪而过的创意。")]),t._v(" "),s("p",[t._v("这个项目是我之前开始学习 JavaScript 时的一个练手作品，现在重构了一遍，把样式和功能都进行了一些完善。虽然这个画板在功能上连 windows XP 上的画图的功能都比不上，但也基本上实现了一个画板应该具有的所有功能，主要包括刚才提到的自定义画笔、自定义画板、保存画作等功能。用到的技术包括：")]),t._v(" "),s("ul",[s("li",[t._v("原生 JS、CSS3、Canvas、iconfont、SVG")])]),t._v(" "),s("p",[t._v("可以说是基础中的基础了，这就是我这个项目的预览链接："),s("a",{attrs:{href:"http://franko.top/Franko-canvas",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://franko.top/Franko-canvas"),s("OutboundLink")],1),t._v("。下面就在这里来讲解讲解这个简单的项目。")]),t._v(" "),s("h3",{attrs:{id:"二、使用画板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、使用画板","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、使用画板")]),t._v(" "),s("p",[t._v("打开项目页面，映入眼帘的就是整个画板的面板。没有其他前置操作，直接就可以开始使用。画板的所有功能也都一目了然：")]),s("div",{staticStyle:{"text-align":"center"}},[s("img",{attrs:{src:"20190206A/001.png",alt:"界面"}})]),t._v("。"),s("p"),t._v(" "),s("p",[t._v("其中各个编号的区域分别具有以下功能：")]),t._v(" "),s("ol",[s("li",[t._v("画板区域，直接使用鼠标在此作画。如果画板大小设置大于页面范围，可以通过拖动滚动条控制绘画区域；")]),t._v(" "),s("li",[t._v("清除画板内容、保存画作的选项；")]),t._v(" "),s("li",[t._v("绘画工具选取，包括铅笔、颜料桶、橡皮；")]),t._v(" "),s("li",[t._v("提供了几种默认的颜色的选项；")]),t._v(" "),s("li",[t._v("支持输入 16 进制颜色号及颜色选取的自定义颜色功能；")]),t._v(" "),s("li",[t._v("改变画笔粗细的输入框；")]),t._v(" "),s("li",[t._v("改变画板宽高的输入框；")])]),t._v(" "),s("p",[t._v("总得来说，只要用过 window XP 里面的「画图」的人应该都比较清楚上面的这些概念。使用方式也非常简单，只要在画板上按下并拖动鼠标就可以在画板上划线了。不过，这里有两点与「画图」不同的地方需要注意：")]),t._v(" "),s("ul",[s("li",[t._v("颜料桶是真正意义上的「颜料桶」，会将选定的颜色「泼」到整个屏幕上")]),t._v(" "),s("li",[t._v("修改画板大小时会重置画板内容")])]),t._v(" "),s("p",[t._v("了解了这些内容之后，关于这个作品的使用，我也应该没有专门写说明书出来的必要了，因为这用起来真的很简单。")]),t._v(" "),s("h3",{attrs:{id:"三、总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、总结")]),t._v(" "),s("p",[t._v("这一节就来讲讲这个画板的实现的具体操作。虽然这个画板用起来很简单，可是其中涉及的过程还是有一些学问的。这个项目的核心实际上就是 "),s("code",[t._v("<canvas>")]),t._v(" 元素，"),s("code",[t._v("<canvas>")]),t._v(" 是 HTML5 新增的元素，可用于通过使用JavaScript中的脚本来绘制图形，这个项目中的所有有关画板的操作无不与 Canvas API 相关联。")]),t._v(" "),s("p",[t._v("首先从最基础的划线开始讲起。每一条在画板的连线实际上都是由起点与终点的两个圆点与其之间的连线构成。但由于在画板上画的都不是直线，所以这里是通过监听鼠标移动事件（onmousemove），每监听到一次就渲染一个点，并记录前一个点，然后将两点连线。具体操作如下：")]),t._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("  canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmousemove")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//移动鼠标")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientX\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientY\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("using"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果「划线开关」为假")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eraserEnabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果「橡皮开关」为真")]),t._v("\n      context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearRect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前点在画板上的位置，加上滚动条的滚动距离")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawCircle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" circleWidth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//画两端的圆")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//连线")]),t._v("\n      lastPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newPoint"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//终点设为下个点的起点")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("p",[t._v("这里面涉及到了两个操作：")]),t._v(" "),s("ul",[s("li",[t._v("因为只有鼠标按下时移动鼠标才会划线，所以鼠标按下（onmousedown）使「划线开关」为真；鼠标收起（onmouseup）或鼠标移出（onmouseout）画板范围时使之为假。")]),t._v(" "),s("li",[t._v("因为支持设定画板宽高，如果画板大于编辑框的大小，就要滚动到相应位置才能继续作画。所以这里要监听画板的滚动事件，才能使内容渲染在准确的位置。")])]),t._v(" "),s("p",[t._v("关于颜色、画笔粗细、画板宽高的设置，这里都将输入框中的值与要设定的值做了绑定，监听输入框的 oninput 事件，在输入框的值改变时触发相应的 Canvas API 就可以了。")]),t._v(" "),s("p",[t._v("至于 Canvas API ，那几句话也说不清楚，这里就用到了画方、画圆、清除区域、填充颜色这几种吧，划线的宽度是由圆与方的宽度控制的。毕竟这个画板也没有什么高端操作，也没用到什么复杂的 API。关于这些 API 可以查阅 MDN 中的相关内容："),s("a",{attrs:{href:"https://developer.mozilla.org/kab/docs/Web/API/Canvas_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Canvas API | MDN"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"四、canvas-与-svg-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、canvas-与-svg-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 四、Canvas 与 SVG 的区别")]),t._v(" "),s("p",[t._v("这次的项目用到了Canvas。因为之前学过 SVG，所以这次用 Canvas 就很奇怪，明明 SVG 也一样有画圆画方这些操作，为什么就不用 SVG 来做呢？我去网上搜了一下这两者的区别，这里摘录了一些内容，也算是解决了我心中的疑惑吧：")]),t._v(" "),s("p",[t._v("Canvas 和 SVG 都允许您在浏览器中创建图形，但是它们在根本上是不同的。SVG 是一种使用 XML 描述 2D 图形的"),s("strong",[t._v("语言")]),t._v("，而 Canvas 是通过 JavaScript 来绘制 2D 图形。下表列出了 canvas 与 SVG 之间的一些不同之处:")]),t._v(" "),s("h4",{attrs:{id:"canvas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canvas","aria-hidden":"true"}},[t._v("#")]),t._v(" Canvas")]),t._v(" "),s("ul",[s("li",[t._v("依赖分辨率")]),t._v(" "),s("li",[t._v("不支持事件处理器")]),t._v(" "),s("li",[t._v("弱的文本渲染能力")]),t._v(" "),s("li",[t._v("能够以 .png 或 .jpg 格式保存结果图像（的画作要保存为png格式）")]),t._v(" "),s("li",[t._v("最适合图像密集型的游戏，其中的许多对象会被频繁重绘")])]),t._v(" "),s("h4",{attrs:{id:"svg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svg","aria-hidden":"true"}},[t._v("#")]),t._v(" SVG")]),t._v(" "),s("ul",[s("li",[t._v("不依赖分辨率")]),t._v(" "),s("li",[t._v("支持事件处理器")]),t._v(" "),s("li",[t._v("最适合带有大型渲染区域的应用程序（比如谷歌地图）")]),t._v(" "),s("li",[t._v("复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）")]),t._v(" "),s("li",[t._v("不适合游戏应用")])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("这个项目中最核心的地方应该就是原生 JS 中的事件监听的使用了吧，各种鼠标事件以及输入框事件。在最开始这个项目还在雏形阶段的时候是做了响应式的，因此还有触摸事件，但是现在因为偷懒的原因就没有做移动端了，主要是时间不够吧，本来也不是很难，就是些样式的问题。这是我的项目源码链接："),s("a",{attrs:{href:"https://github.com/FanKaiqiang/Todo-List",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/FanKaiqiang/Todo-List"),s("OutboundLink")],1),t._v("。")]),s("div",{staticStyle:{"text-align":"center"}},[s("img",{attrs:{src:"20190206A/002.jpg",alt:"画板"}})]),s("p")])},[],!1,null,null,null);a.default=r.exports}}]);