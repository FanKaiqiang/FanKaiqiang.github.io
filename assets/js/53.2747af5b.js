(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{363:function(a,t,e){"use strict";e.r(t);var o=e(40),r=Object(o.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("div",{staticClass:"tip custom-block"},[e("p",[a._v("这几天都在做网易云音乐的毕设，现在已经看到第五课了，今天学这节课学了一天，真没想到要学这么久，搞得今天博客都没时间去写了。")])]),a._v(" "),e("p",[a._v("所以今天晚上就干脆把这篇博客的头开一下，今天晚上把这篇博客直接完成似乎不是很现实，因为电脑的电可能撑不了这么久了。今晚最好能大致把行文思路整理好，明天写起来也更轻松。")]),e("div",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:"20181126A/timg.jfif",alt:"挑灯夜战"}})]),e("p"),a._v(" "),e("p",[a._v("这次博客的主题是LocalStorage，和Session差不多，这些知识已经是差不多半个月之前学得了，一直没想过回顾，虽然谈不上全部忘记，但是在心里的印象已经渐渐模糊了。所以上次我去参加，蓝鸽的笔试的时候碰见LocalStorage的题目，心里也有些遗憾没有及早地把这篇博客写出来。所以这次的目标就是把LocalStorage这个知识点给搞清楚，现在之所以还会对这个点感到困惑，也与之前学的还不够牢固有关系。")]),a._v(" "),e("h2",{attrs:{id:"localstorage的操作api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localstorage的操作api","aria-hidden":"true"}},[a._v("#")]),a._v(" LocalStorage的操作API")]),a._v(" "),e("p",[a._v("再讲LocalStorage是什么之前不如直接看一下这个单词的意思，「本地存储」。把这个意思了解了大概也可以把LocalStorage的作用猜个八九不离十了。LocalStorage的实质是一个哈希对象，作为全局对象存在于浏览器中，即window.localStorage。因此在浏览器中随时可以通过调用这个对象来读取存放在这个对象中的信息。先不说LocalStorage的作用，先来看看如何来操作LocalStorage。")]),a._v(" "),e("p",[a._v("localStorage的操作方法非常简单，就是基本的增删查。下面这几个来讲讲操作LocalStorage对象的API。")]),a._v(" "),e("h3",{attrs:{id:"_1、增（localstorage-setitem）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、增（localstorage-setitem）","aria-hidden":"true"}},[a._v("#")]),a._v(" 1、增（localStorage.setItem）")]),a._v(" "),e("p",[a._v("给LocalStorage这个哈希对象填充值需要用到localStorage的setItem方法。localStorage只能存储字符串，非字符串的数据在存储之前会被转换成字符串，如果直接把对象往LocalStorage里存会得到"),e("code",[a._v("[object,Object]")]),a._v("的结果。所以在存储一些复杂数据类型时可能有些麻烦，通常的做法是先使用JSON.stringfy()方法将其转换为字符串后存储，使用时取出后再使用JSON.parse()方法进行还原。具体做法如下：")]),a._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("localStorage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("setItem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),e("span",{pre:!0,attrs:{class:"token constant"}},[a._v("JSON")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("stringify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("其中setItem()方法的第一个参数为哈希对象中的key，第二个参数为value。上面的代码即是往LocalStorage中存储一条以“a”为key、以“JSON.stringify(object)”为value的数据。")]),a._v(" "),e("h3",{attrs:{id:"_2、查（localstorage-getitem）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、查（localstorage-getitem）","aria-hidden":"true"}},[a._v("#")]),a._v(" 2、查（localStorage.getItem）")]),a._v(" "),e("p",[a._v("查询LocalStorage中的值需要用到localStorage的getItem方法，需要将查询的值在LocalStorage中的key作为这个方法的参数传入，意为查找LocalStorage中以“a”为key的数据。")]),a._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("localStorage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getItem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3、删（localstorage-removeitem）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、删（localstorage-removeitem）","aria-hidden":"true"}},[a._v("#")]),a._v(" 3、删（localStorage.removeItem）")]),a._v(" "),e("p",[a._v("删除LocalStorage中的值需要用到localStorage的removeItem方法，需要将删除的值在LocalStorage中的key作为这个方法的参数传入，意为删除LocalStorage中以“a”为key的数据。")]),a._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("localStorage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("removeItem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"_4、清空数据（localstorage-clear）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、清空数据（localstorage-clear）","aria-hidden":"true"}},[a._v("#")]),a._v(" 4、清空数据（localStorage.clear）")]),a._v(" "),e("p",[a._v("清空LocalStorage中存放的数据：")]),a._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("localStorage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("clear")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"localstorage的使用方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localstorage的使用方法","aria-hidden":"true"}},[a._v("#")]),a._v(" LocalStorage的使用方法")]),a._v(" "),e("h3",{attrs:{id:"localstorage的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localstorage的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" LocalStorage的作用")]),a._v(" "),e("p",[a._v("在平时调试网页的时候会使用到开发者工具，里面有一个控制台。如果使用这个控制台声明一个变量，在刷不页面之后，之前声明的变量就失效了。如何才能留住增额变量呢？或者是一个更加实际的功能的实现，某网站顶部的广告关闭，效果为第一次进入官网会出现广告，然后点击关闭，刷新网页不会再显示广告。")]),e("div",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:"20181126A/001.jfif",alt:"操作"}})]),e("p"),a._v(" "),e("p",[a._v("要想解决这两个问题就要用到LocalStorage。与Cookie相似，LocalStorage实质上也是存放在本地的一个文件，浏览器所有页面的LocalStorage都共用同一个LocalStorage文件。在控制台声明JS变量时，刷新页面就会销毁全部变量，但是使用LocalStorage可以将需要的变量留到以后使用，存放在其中的数据并不会随着页面的刷新而消失。")]),a._v(" "),e("p",[a._v("此外，LocalStorage还可以用于跨页面记录信息，同一浏览器的相同域名和端口的不同页面间可以共享相同的 LocalStorage。利用这个特点就可以实现刚才提到的不再显示广告的效果，比如在LocalStorage添加这样一条数据：")]),a._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[a._v("localStorage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("setItem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'提示了'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("这样就相当于为每个用户记录了一条信息，下次打开网页时就会通过这条信息进行判断是否需要显示广告。如果将清除localStorage存入的数据，刷新网页就会再次显示广告。")]),a._v(" "),e("p",[a._v("因此，在平时就可以将LocalStorage用以记录一些不敏感的信息。因为LocalStorage作为本地文件，也是可以被修改的。直接打开Chrome浏览器的开发者工具，在Application => Stroage => LocalStorage中就可以查看此页面的LocalStorage的内容，并且可以对其进行修改。")]),a._v(" "),e("p",[a._v("这种记录用户信息的操作似乎在哪里看过？就是Cookie。既然这些事情Cookie也能做，为什么要用LocalStorage呢？那就让谈谈LocalStorage具有哪些特点吧。")]),a._v(" "),e("h3",{attrs:{id:"localstorage的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localstorage的特点","aria-hidden":"true"}},[a._v("#")]),a._v(" LocalStorage的特点")]),a._v(" "),e("p",[a._v("在与Cookie进行比较之前，把LocalStorage的特点先逐条列出：")]),a._v(" "),e("pre",[e("code",[a._v("1. LocalStorage与HTTP并无关系，只在本地存储。LocalStorage的数据不会跟随HTTP请求一起发送到服务器，只会在本地生效，不参与和服务器的通信。\n2. LocalStorage与Cookie一样都是遵循同源策略的，若想在不同页面之间对同一个localStorage进行操作，这些页面必须在同一协议、同一主机名和同一端口下。此外在不同浏览器之间，LocalStorage与Cookie一样也是不共享的。\n3. LocalStorage在不同的浏览器存储的上限也不一样，其中每个域名可用于存储的容量也是有限的，大多数浏览器把上限限制在5MB左右。\n4. LocalStorage永久有效，保存的数据没有过期时间，除非用户手动清除。\n")])]),a._v(" "),e("p",[a._v("了解了LocalStorage的特点之后，可以发现，作为跨页面持久化存储的方案，LocalStorage无疑是优于Cookie的。")]),a._v(" "),e("p",[a._v("之所以Cookie会被拿来与LocalStorage比较，那是因为最初Cookie是最简单而且兼容性最佳的方案，但是随着Web应用的发展，使用Cookie进行持久化存储显示出了很多很多致命伤。而LocalStorage是在HTML 5中给出的更理想的解决方案，LocalStorage与Cookie相比，区别与优势主要如下：")]),a._v(" "),e("pre",[e("code",[a._v("1. LocalStorage的存储内容不会发送到服务器。当设置了Cookie后，Cookie的内容会随着请求一并发送的服务器，这对于本地存储的数据是一种带宽浪费。而LocalStorage中的数据则仅仅是存在本地，不会与服务器发生任何交互。\n2. cookie的长度和数量的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，与LocalStorage的5M左右大小相比实在是小得太多了。并且LocalStorage的每个域（包括子域）有独立的存储空间，各个存储空间是完全独立的，因此不会造成数据混乱。\n3. Cookie默认关闭页面就会失效，不过后台代码可以任意设置Cookie的过期时间；LocalStorage没有过期时间。\n4. LocalStorage提供了一套更为丰富的接口，使得数据操作更为简便。\n")])]),a._v(" "),e("p",[a._v("上面主要说的是LocalStorage在持久化存储的优势，并不是说Cookie就一无是处，事实上Cookie在服务器与浏览器之间交互的这个作用LocalStorage就是代替不了的，持久化存储本就不该是Cookie要做的事。")]),e("div",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:"20181126A/002.jfif",alt:"存储"}})]),e("p"),a._v(" "),e("h3",{attrs:{id:"sessionstorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage","aria-hidden":"true"}},[a._v("#")]),a._v(" SessionStorage")]),a._v(" "),e("p",[a._v("讲了那么多LocalStorage，SessionStorage一次都没有提到，这里简要地讲一下。实际上SessionStorage与LocalStorage是非常相似的，二者是被作为浏览器本地存储的方案Web Storage的两部分在HTML 5中被提出。顾名思义，SessionStorage应该意为「会话存储」。来看看它与LocalStorage之间的区别：")]),a._v(" "),e("pre",[e("code",[a._v("1. localStorage生命周期是永久，这意味着除非用户显示在浏览器提供的UI上清除localStorage信息，否则这些信息将永远存在。sessionStorage生命周期为当前窗口或标签页，一旦窗口或标签页被永久关闭了，那么所有通过sessionStorage存储的数据也就被清空了。\n2. 相同浏览器的不同页面间可以共享相同的 localStorage（页面属于相同域名和端口），但是不同页面或标签页间无法共享sessionStorage的信息。这里需要注意的是，页面及标签页仅指顶级窗口，如果一个标签页包含多个iframe标签且他们属于同源页面，那么他们之间是可以共享sessionStorage的。\n")])]),a._v(" "),e("p",[a._v("除了这两个区别之外，二者的表现基本一致。SessionStorage也具有与LocalStorage相同的操作API。不过因为SessionStorage只能用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。所以sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。")]),a._v(" "),e("hr"),a._v(" "),e("p",[a._v("完成于 2018年11月29日 10:48:21")]),a._v(" "),e("p",[a._v("这篇博客真没想到要写这么久，主要是我自己对LocalStorage的认识还不够清晰，行文思路也基本没有，都是写一步看一步的状态。不过磨了几天终于把这篇本该几天前写完的博客完成了，心里也舒坦不少，对LocalStorage的认识也更加明白了。那么今天份的博客又该何时完成呢？")]),e("div",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:"20181126A/003.jfif",alt:"诶"}})]),e("p"),a._v(" "),e("p",[a._v("下面是本文的参考资料，在此鸣谢：")]),a._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/polk6/p/5684098.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("HTML5 localStorage本地存储"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000012057010",target:"_blank",rel:"noopener noreferrer"}},[a._v("localStorage、sessionStorage、Cookie的区别及用法"),e("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=r.exports}}]);