(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{340:function(t,r,a){"use strict";a.r(r);var e=a(40),o=Object(e.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"tip custom-block"},[a("p",[t._v("学完CSS深入浅出也有一段时间了，最后一节课的总结我一直没有去完成。并不是我后面就在偷懒，而是觉得总结不能太过潦草，既然我要真正完成CSS深入浅出这门课，我就得在完成这门课之后，至少要有学过的知识没有那么快忘掉的程度。在前几天在学校秋招的期间，我抽空把这门课的一些笔记过了一遍，我想是时候来做个总结了。")])]),t._v(" "),a("p",[t._v("CSS深入浅出共有12节课，从这些课里我学到了许多关于CSS的理论。从最开始的对CSS一无所知，到现在的初窥门径，可以说这就是这12节课给我当前带来的成长，我相信有了这些理论的支撑，在日后的工作历程中即是遇到一些麻烦也能得心应手。")]),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"20181021A/001.png",alt:"CSS"}})]),a("p"),t._v(" "),a("p",[t._v("借用老师的总结，这些理论知识大抵如下：")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("控制文档流：利用好默认的宽度和高度规则")]),t._v(" "),a("li",[t._v("控制 z-index：堆叠上下文和堆叠顺序")]),t._v(" "),a("li",[t._v("理解 BFC")]),t._v(" "),a("li",[t._v("理解 IFC")]),t._v(" "),a("li",[t._v("理解 Float 布局和 Flex 布局")]),t._v(" "),a("li",[t._v("理解响应式")]),t._v(" "),a("li",[t._v("掌握动态 REM 方案")]),t._v(" "),a("li",[t._v("掌握 icon 的使用")]),t._v(" "),a("li",[t._v("掌握 Bootstrap 的使用")])])]),t._v(" "),a("h3",{attrs:{id:"文档流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档流","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档流")]),t._v(" "),a("p",[t._v("首先讲到的就是文档流。内联元素从左往右依次排列，空间不够则会换行；块级元素每个都会另起一行，从上往下排列。这种排列规则就是文档流。")]),t._v(" "),a("p",[t._v("通过float:left、position:absolute、position:fixed等都可以实现脱离文档流的效果。相对定位并不能脱离文档流，高度仍然会被算进父元素，相对定位的元素在文档流中的位置实际上不会改变，不会挤到其他元素。")]),t._v(" "),a("h3",{attrs:{id:"堆叠上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆叠上下文","aria-hidden":"true"}},[t._v("#")]),t._v(" 堆叠上下文")]),t._v(" "),a("p",[t._v("然后讲到堆叠顺序与堆叠上下文，之前讲的是元素在页面上的排列，这两条属性都是与元素在垂直屏幕方向上的排列顺序。什么样的元素会改在上方，什么样的元素又会沉在底下？关于这些内容的总结我单独写出了一篇博客："),a("a",{attrs:{href:"http://franko.top/1809/20180927A/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【归纳】CSS堆叠上下文"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"bfc与ifc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc与ifc","aria-hidden":"true"}},[t._v("#")]),t._v(" BFC与IFC")]),t._v(" "),a("p",[t._v("BFC与IFC作为块级元素与内联元素的排列准则，在上两篇博客我分别进行了总结。这两个内容并不好懂，学完课程之后我还是不能肯定我就是整明白了这方面的知识。可能还是欠缺实践经验吧。下面是这两篇博客的地址："),a("a",{attrs:{href:"http://franko.top/1810/20181016A/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【归纳】BFC解惑"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"http://franko.top/1810/20181020A/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【归纳】IFC解惑"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex布局","aria-hidden":"true"}},[t._v("#")]),t._v(" flex布局")]),t._v(" "),a("p",[t._v("flex布局的总结我做的比较早。flex布局是一种全新的布局方式，被称为“弹性布局”，与其他的布局方法相比显得非常方便，可以完全胜任简单的线性布局。关于flex布局我也写了一篇总结博客："),a("a",{attrs:{href:"http://franko.top/1809/20180925A/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【归纳】flex布局"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"响应式布局与动态rem方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局与动态rem方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 响应式布局与动态REM方案")]),t._v(" "),a("p",[t._v("响应式布局与动态REM方案都是与移动端布局相关的，这些方法告诉了如何在不同的设备上使同一个页面展现出自己需要的效果。两篇内容我写在一篇博客里，也算是集中在一起总结了："),a("a",{attrs:{href:"http://franko.top/1810/20181004A/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【归纳】移动端页面开发"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"icon的制作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#icon的制作","aria-hidden":"true"}},[t._v("#")]),t._v(" icon的制作")]),t._v(" "),a("p",[t._v("然后的话就是关于icon制作的一些小技巧，和之前的知识相比icon制作显得没有那么主要，但是还是给人有用的感觉，内容比较简单。如果icon制作上遇到了麻烦，可以回头查阅这篇博客："),a("a",{attrs:{href:"http://franko.top/1809/20180926A/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【归纳】icon的各种做法"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"bootstrap的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap的使用","aria-hidden":"true"}},[t._v("#")]),t._v(" Bootstrap的使用")]),t._v(" "),a("p",[t._v("最后是关于Bootstrap的一些总结。Bootstrap是一种简洁、直观、强悍的前端开发框架。使用Bootstrap可以让多快好省地把页面做出来，虽然前端开发是要自己写页面的，但是Bootstrap的一些思想还是需要清楚的。这是我关于Bootstrap的总结博客："),a("a",{attrs:{href:"http://franko.top/1810/20181015A/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【归纳】Bootstrap的使用方法"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("为了这次的总结，我写了八篇博客，每篇博客我除了对笔记进行整理，我还会查查资料，看看别人的博客是怎么写得，所以效率上就差了很多。我大概在十月放假的时候学完CSS深入浅出。今天已经21号了，过了大概十几天才算完全做完总结，当然中间也学了些系统课。")]),t._v(" "),a("p",[t._v("可以说，这次的总结是花费了我比较多的时间的。主要得益于两点原因，一是我前段时间系统课学得较快，在一个月之前学到了17课，因为分期的原因，我没有马不停蹄地继续学下去，就干脆开始把CSS深入浅出完成；第二个原因是我后面回去秋招，没有那么多精力去学习系统课，就干脆只是抽点时间复习一下原来的笔记，写些博客，做做总结。正因为如此我今天的这个总结才能以这种形式呈现在眼前。")]),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"20181021A/002.jpg",alt:"CSS"}})]),a("p"),t._v(" "),a("p",[t._v("不过得益于这次总结，我倒是养成了写博客的习惯，现在已经写了二十来篇了，都有点担心写博客会不会耽误学习速度了，不过我还是会坚持下去的。接下来的时间就安心继续学习系统课了，加油吧。")])])},[],!1,null,null,null);r.default=o.exports}}]);