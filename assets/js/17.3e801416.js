(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{327:function(e,v,_){"use strict";_.r(v);var t=_(40),o=Object(t.a)({},function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("div",{staticClass:"tip custom-block"},[_("p",[e._v("今天继续补充之前没写的博客，这也是我的第十篇博客。希望通过这次的博客能够让我更好地掌握我自己所学的知识，因为我的博客也是基于我的笔记写出来的，这样总算让我感觉到之前做的笔记也没有白费，毕竟字写得不好，自己也不想多看。")])]),e._v(" "),_("p",[e._v("这次的博客主要讨论的是CSS的堆叠上下文。前几天学习堆叠上下文的时候，我最开始感觉这个概念是比较抽象的，第一眼看到这个名词的时候把握不了一个大概。学完之后感觉堆叠上下文倒也不甚深奥，但我也不是弄得特别清楚。因此写下一篇博客用来加深印象，这是很有必要的。")]),_("div",{staticStyle:{"text-align":"center"}},[_("img",{attrs:{src:"20180927A/timg.jpg",alt:"写字"}})]),_("p"),e._v(" "),_("h2",{attrs:{id:"堆叠顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#堆叠顺序","aria-hidden":"true"}},[e._v("#")]),e._v(" 堆叠顺序")]),e._v(" "),_("p",[e._v("在对网页进行设计的时候，总会用到许多的元素，这些元素很多时候需要将它们组合在一起。而"),_("code",[e._v("div")]),e._v("在屏幕的垂直方向上也是有层次关系的。它们之前在层叠起来的时，很多时候都有一个排序规则，并不是简单的先来后到，而了解这些元素在界面上的堆叠顺序对编写CSS是非常有帮助的。下面就借助一下张鑫旭相关博客的一张图，归纳一下常见的元素的堆叠规则：")]),_("div",{staticStyle:{"text-align":"center"}},[_("img",{attrs:{src:"20180927A/timg2.png",alt:"堆叠规则"}})]),e._v("\n这张图大概就能够表明一个基本的元素堆叠顺序。前几天我也学习了堆叠顺序，也做了记录。经过对笔记的整理，得到其中由低到高的顺序大概是这样的："),_("p"),e._v(" "),_("ul",[_("li",[e._v("z-index = -1")]),e._v(" "),_("li",[e._v("background 背景")]),e._v(" "),_("li",[e._v("border 边框")]),e._v(" "),_("li",[e._v("block 块状元素")]),e._v(" "),_("li",[e._v("float 浮动元素")]),e._v(" "),_("li",[e._v("inline / inline-block 内联元素、文字等")]),e._v(" "),_("li",[e._v("z-index = 0 或auto")]),e._v(" "),_("li",[e._v("z-index = 1")])]),e._v(" "),_("p",[e._v("除此之外，在同级元素互相比较的情况下，在DOM流中处于后面的元素会覆盖前面的元素。也可称此特性为“后来居上”。\n这下大概明白了一些，但是这其中的"),_("code",[e._v("z-index")]),e._v("属性又是什么呢？为什么和图中的情况不同，我在笔记中记录的负"),_("code",[e._v("z-index")]),e._v("会叠在"),_("code",[e._v("background")]),e._v("之下呢？这时候就要了解今天需要接触的概念：堆叠上下文。")]),e._v(" "),_("h2",{attrs:{id:"堆叠上下文"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#堆叠上下文","aria-hidden":"true"}},[e._v("#")]),e._v(" 堆叠上下文")]),e._v(" "),_("p",[e._v("什么是堆叠上下文？在MDN中给出的定义是这样的：")]),e._v(" "),_("blockquote",[_("p",[e._v("层叠上下文是HTML元素的三维概念，这些HTML元素在一条假想的相对于面向（电脑屏幕的）视窗或者网页的用户的z轴上延伸，HTML元素依据其自身属性按照优先级顺序占用层叠上下文的空间。")])]),e._v(" "),_("p",[e._v("之前提到了 "),_("code",[e._v("z-index")]),e._v(" , 某些 DIV 的堆叠顺序是由 "),_("code",[e._v("z-index")]),e._v(" 的值影响的。这是因为这些 DIV 具有使他们形成一个堆叠上下文的特殊属性。文档中的堆叠上下文由满足以下任意一个条件的元素形成：（以下引自MDN）")]),e._v(" "),_("blockquote",[_("ul",[_("li",[_("strong",[e._v("根元素 (HTML),")])]),e._v(" "),_("li",[_("strong",[_("code",[e._v("z-index")]),e._v(' 值不为 "'),_("code",[e._v("auto")]),e._v('"的 绝对/相对定位，')])]),e._v(" "),_("li",[_("strong",[e._v("一个 "),_("code",[e._v("z-index")]),e._v(' 值不为 "'),_("code",[e._v("auto")]),e._v('"的 flex 项目 (flex item)，即：父元素 '),_("code",[e._v("display: flex|inline-flex")]),e._v("，")])]),e._v(" "),_("li",[_("strong",[_("code",[e._v("position: fixed")])])]),e._v(" "),_("li",[e._v("opacity 属性值小于 1 的元素（参考 the specification for opacity），")]),e._v(" "),_("li",[e._v('transform 属性值不为 "none"的元素，')]),e._v(" "),_("li",[e._v('mix-blend-mode 属性值不为 "normal"的元素，')]),e._v(" "),_("li",[e._v("filter值不为“none”的元素，")]),e._v(" "),_("li",[e._v("perspective值不为“none”的元素，")]),e._v(" "),_("li",[e._v('isolation 属性被设置为 "isolate"的元素，')]),e._v(" "),_("li",[e._v("在 will-change 中指定了任意 CSS 属性，即便你没有直接指定这些属性的值")]),e._v(" "),_("li",[e._v('-webkit-overflow-scrolling 属性被设置 "touch"的元素')])])]),e._v(" "),_("p",[e._v("这里列出了很多条件，但是很多我都不了解，在上面列出的条件中，加粗的部分是值得注意的。")]),e._v(" "),_("p",[e._v("由这些条件就可以知道，给"),_("code",[e._v("span")]),e._v("加"),_("code",[e._v("z-index")]),e._v("并不能使元素变高，那是因为这个元素并不满足堆叠上下文的条件。但如果一个元素被加上了"),_("code",[e._v("position：relative")]),e._v("，就会比浮动元素要高。这是因为加上这个之后满足了成为堆叠上下文的条件，"),_("code",[e._v("z-index")]),e._v("的值为"),_("code",[e._v("auto")]),e._v("。堆叠上下文影响着"),_("code",[e._v("z-index")]),e._v("，不管是绝对定位还是相对定位，都通过z-index来决定层叠关系。")]),e._v(" "),_("p",[e._v("下面看一个例子：")]),_("div",{staticStyle:{"text-align":"center"}},[_("img",{attrs:{src:"20180927A/timg1.png",alt:"堆叠规则"}})]),_("p"),e._v(" "),_("p",[e._v("这个例子里有6个DIV，其中第4、5、6 三个DIV是第3个DIV的子元素。可以看到，"),_("code",[e._v("z-index")]),e._v("大的元素并不一定就会堆叠在上方。但是元素1、2、3和元素4、5、6在各自的父元素当中都是按照"),_("code",[e._v("z-index")]),e._v("的顺序进行排列的。由此可以知道。元素在通过"),_("code",[e._v("z-index")]),e._v("比较堆叠顺序的时候，应该先对其的父元素进行对比。如果该元素的父元素高于本元素的父元素，那么该元素就会高于本元素的父元素下的所有子元素。")]),e._v(" "),_("p",[e._v("借此回到之前提到的问题，为什么张鑫旭的图中"),_("code",[e._v("z-index: -1")]),e._v("的位置走在"),_("code",[e._v("background")]),e._v("和"),_("code",[e._v("border")]),e._v("的前面？那是因为如果父元素成为堆叠上下文之后，"),_("code",[e._v("z-index: -1")]),e._v("的位置才会在"),_("code",[e._v("border")]),e._v("的前面的。因为"),_("code",[e._v("background")]),e._v("和"),_("code",[e._v("border")]),e._v("是一个整体，不能溢出具有堆叠上下文的父元素的边界范围。在此之前，具有堆叠上下文的父元素实际上是根元素（html），因此"),_("code",[e._v("z-index: -1")]),e._v("位置在"),_("code",[e._v("background")]),e._v("之后。"),_("code",[e._v("background")]),e._v("的父元素成为堆叠上下文后，这个边界范围就回退到该父元素的"),_("code",[e._v("border")]),e._v("了。因此"),_("code",[e._v("z-index: -1")]),e._v("只能在该整体内，也就是"),_("code",[e._v("border")]),e._v("内了。")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("大概地整理了一下之前学习的堆叠上下文的知识，算是完成了一次温故知新了。这篇博客写的不多，但是堆叠上下文的要点大概都归纳出来了。下次想加深了解堆叠上下文，张鑫旭的博客里面讲的很详细，以后我再来查阅吧。在本次博客撰写中，我主要还是围绕着我的笔记展开的，当然MDN和张鑫旭的博客都给了我一些帮助，以下是他们的链接：")]),e._v(" "),_("ol",[_("li",[_("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/",target:"_blank",rel:"noopener noreferrer"}},[e._v("深入理解CSS中的层叠上下文和层叠顺序-张鑫旭"),_("OutboundLink")],1)]),e._v(" "),_("li",[_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context",target:"_blank",rel:"noopener noreferrer"}},[e._v("The stacking context-层叠上下文"),_("OutboundLink")],1)])])])},[],!1,null,null,null);v.default=o.exports}}]);