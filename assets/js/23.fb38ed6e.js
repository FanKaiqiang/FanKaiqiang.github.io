(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{333:function(t,s,a){"use strict";a.r(s);var e=a(40),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"tip custom-block"},[a("p",[t._v("这是回来学校之后写的第一篇博客，好几天没写了。这几天因为校招的原因，都没什么空写，也没什么空看视频。今天下午抽个时间，把之前记录下来的一些知识点记录下来，也算是完成一项任务吧，也省的忘记。")])]),t._v(" "),a("p",[t._v("本次的归纳主题主要是围绕着“JS里的数据类型”展开的，之前看了阮一峰教程中一些关于这方面的知识，算是预习了一下，本次算是复习。总体来说，都是围绕着 阮一峰的这篇"),a("a",{attrs:{href:"http://JavaScript.ruanyifeng.com/#introduction",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JavaScript 标准参考教程（alpha）》"),a("OutboundLink")],1),t._v("展开的。现在就开始将课上的笔记进行一下归纳。")]),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"20181012A/timg.jpg",alt:"数据类型"}})]),a("p"),t._v(" "),a("h2",{attrs:{id:"js的历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js的历史","aria-hidden":"true"}},[t._v("#")]),t._v(" JS的历史")]),t._v(" "),a("p",[t._v("在开始学习JS之前，对JS的一些历史的了解是必要的，这样可以在宏观层面上对JS有一个初步的了解。接下来就将JS的历史通过列表的方式简单地呈现出来,虽然没有教程中讲述得详细，但是还是可以了解个大概：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("时间")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("事件")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1991")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Tim Berners-Lee发明了万维网（World Wide Web）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1992")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("NCSA开始开发一个独立的浏览器，叫做Mosaic")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1994")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Netscape在Mosaic的基础上，开发了Netscape Navigator")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1995")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Netscape公司的Brendan Eich开发了一种网页脚本语言，最初名字叫做 Mocha,后改为JavaScript")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1996")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("微软模仿JavaScript开发了一种相近的语言，取名为JScript")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1997")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ECMA组织发布了第一版浏览器脚本语言的标准，并将这种语言称为ECMAScript")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1999")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ECMAScript 3.0版发布，成为得到了广泛支持的JavaScript通行标准")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1999")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("IE 5部署了XMLHttpRequest接口，允许JavaScript发出HTTP请求")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2002")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Mozilla项目发布了它的浏览器的第一版，后来起名为Firefox")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2004")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Google公司发布了Gmail，促成了互联网应用程序（Web Application）这个概念的诞生")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2009")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ECMAScript 5.0版正式发布")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2015")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ECMAScript 6正式发布,标志JS成为现代编程语言。")])])])]),t._v(" "),a("p",[t._v("此后ES每年一次更新，ES6是一次比较大的更新，因此比较重要。从JS的发展历程可以看出，JS是在不断发展和完善的，会不断将一些新特性纳入规范。不仅如此，JS还可以将未纳入规范的特性写入代码中。正如JS之父Brendan Eich所说的：")]),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"20181012A/Brendan.jpg",alt:"JS之父"}}),a("br"),t._v("Brendan Eich")]),a("p"),t._v(" "),a("blockquote",[a("p",[t._v("「JS原创之处并不优秀，优秀之处并非原创」")])]),t._v(" "),a("p",[t._v("JS也将作为一门一直伴随着学习历程的语言，和在学习中的人一样，在最开始的时候未必是最优秀的，但是通过学习不断成长，是自己变得优秀。这次也将是我正式系统学习JS的一个开始，下面就从JS的数据类型开始讲起，完成JS的入门。")]),t._v(" "),a("h2",{attrs:{id:"js里的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js里的数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" JS里的数据类型")]),t._v(" "),a("p",[t._v("JS里有七种数据类型：")]),t._v(" "),a("ul",[a("li",[t._v("数值（number）")]),t._v(" "),a("li",[t._v("字符串（string）")]),t._v(" "),a("li",[t._v("布尔（boolean）")]),t._v(" "),a("li",[t._v("对象（object）")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("Symbol")])]),t._v(" "),a("p",[t._v("其中Symbol是在ES6中引入的一种新的数据类型，在本文中并不会去重点归纳。下面就一次对JS的这几种数据类型进行一些简单的介绍:")]),t._v(" "),a("h3",{attrs:{id:"_1、数值（number）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、数值（number）","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、数值（number）")]),t._v(" "),a("p",[t._v("JS中的数字有以下几种表现形式，满足以下几种规范的数据即可称为数值：")]),t._v(" "),a("ol",[a("li",[t._v("十进制数值，如1.2、.2（小数点前不加数字代表0）、1.23e2（代表1.23*10^2）")]),t._v(" "),a("li",[t._v("二进制数值，如0b11（十进制的3）。二进制数值以“0b”开头")]),t._v(" "),a("li",[t._v("八进制数值，如011（十进制的9）。八进制的数值以“0”开头")]),t._v(" "),a("li",[t._v("十六进制数值，如0x11（十进制的17.十六进制的数值以以“0x”开头")])]),t._v(" "),a("p",[t._v("因此需要注意，在表示电话号码时最好使用字符串来保存，因为以零开头的数值会被认为是一个八进制数值。")]),t._v(" "),a("h3",{attrs:{id:"_2、字符串（string）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、字符串（string）","aria-hidden":"true"}},[t._v("#")]),t._v(" 2、字符串（string）")]),t._v(" "),a("p",[t._v("字符串就是放在单引号或双引号之中的零个或多个排在一起的字符。如'abc'、\"abc\"等。")]),t._v(" "),a("p",[t._v('这里讲一下空字符串与空格字符串的区别。空字符串是""，空格字符串是" "二者的长度是不同的，前者是0，后者是1。')]),t._v(" "),a("p",[t._v('单引号字符串的内部，可以使用双引号。双引号字符串的内部，可以使用单引号。比如\'key = "value"\'、"It\'s a long journey"等。但是如果要在单引号字符串的内部使用单引号，就要使用转义字符。')]),t._v(" "),a("h4",{attrs:{id:"转义符-反斜杠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义符-反斜杠","aria-hidden":"true"}},[t._v("#")]),t._v(" 转义符(反斜杠)")]),t._v(" "),a("p",[t._v("反斜杠（\\）在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义符。需要用反斜杠转义的特殊字符，主要有下面这些:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("\\0")]),t._v(" ：null（\\u0000）")]),t._v(" "),a("li",[a("code",[t._v("\\b")]),t._v(" ：后退键（\\u0008）")]),t._v(" "),a("li",[a("code",[t._v("\\f")]),t._v(" ：换页符（\\u000C）")]),t._v(" "),a("li",[a("code",[t._v("\\n")]),t._v(" ：换行符（\\u000A）")]),t._v(" "),a("li",[a("code",[t._v("\\r")]),t._v(" ：回车键（\\u000D）")]),t._v(" "),a("li",[a("code",[t._v("\\t")]),t._v(" ：制表符（\\u0009）")]),t._v(" "),a("li",[a("code",[t._v("\\v")]),t._v(" ：垂直制表符（\\u000B）")]),t._v(" "),a("li",[a("code",[t._v("\\'")]),t._v(" ：单引号（\\u0027）")]),t._v(" "),a("li",[a("code",[t._v('\\"')]),t._v(" ：双引号（\\u0022）")]),t._v(" "),a("li",[a("code",[t._v("\\\\")]),t._v(" ：反斜杠（\\u005C）")])]),t._v(" "),a("p",[t._v("上面这些字符前面加上反斜杠，都表示特殊含义。如果字符串的正常内容之中，需要包含反斜杠，则反斜杠前面需要再加一个反斜杠，用来对自身转义。")]),t._v(" "),a("h4",{attrs:{id:"多行字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" 多行字符串")]),t._v(" "),a("p",[t._v("字符串默认只能写在一行内，分成多行将会报错。如果长字符串必须分成多行，可以在每一行的尾部使用反斜杠。如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Long \\\nlong \\\nlong \\\nstring'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("这种方法等同于这样表示：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Long'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'long'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'long'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("两种方法都可以表示多行字符串，但是更推荐使用第二种方法。第一种方法乍一看很方便，但是其实不够严谨：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 'Long \\        \nlong \\\nlong \\\nstring'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("这种情况下，因为“\\”后面还接了一些空格，所以这段代码是会报错的，但是肉眼发现不了，这样就形成了隐患。")]),t._v(" "),a("p",[t._v("在ES6中新添加了使用反引号表示多行字符串的方法，比如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Long\nlong\nlong\nstring")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("这种方法很方便，也不会产生刚才提到的问题。但是需要注意这样表示出来的字符串的长度，"),a("strong",[t._v("是会包含回车键的")]),t._v("。以及这种情况：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Long\n          long\n          long\n          string")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("这样表示的字符串长度中会包括“long”前面用来缩进的空格长度。")]),t._v(" "),a("h3",{attrs:{id:"_3、布尔（boolean）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、布尔（boolean）","aria-hidden":"true"}},[t._v("#")]),t._v(" 3、布尔（boolean）")]),t._v(" "),a("p",[t._v("布尔值代表“真”和“假”两个状态。“真”用关键字true表示，“假”用关键字false表示。布尔值只有这两个值。由于布尔在符号逻辑运算中做出了特殊贡献，很多计算机语言中将逻辑运算称为布尔运算，将其结果称为布尔值。")]),a("div",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"20181012A/boolean.jpg",alt:"布尔"}}),a("br"),t._v("乔治·布尔")]),a("p"),t._v(" "),a("p",[t._v("如果 JavaScript 预期某个位置应该是布尔值，会将该位置上现有的值自动转为布尔值。转换规则是除了下面六个值被转为false，其他值都视为true：")]),t._v(" "),a("ul",[a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("false")]),t._v(" "),a("li",[t._v("0")]),t._v(" "),a("li",[t._v("NaN")]),t._v(" "),a("li",[t._v("\"\"或''（空字符串）")])]),t._v(" "),a("h3",{attrs:{id:"_4、null与undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、null与undefined","aria-hidden":"true"}},[t._v("#")]),t._v(" 4、null与undefined")]),t._v(" "),a("p",[t._v("null与undefined都可以表示“没有”，因此这两种数据类型就放在一起讲。null类型只有一个值“null”，undefined类型也只有一个值“undefined”，二者十分相似，要表达的含义也相似，但是二者也有着如下的区别：")]),t._v(" "),a("ol",[a("li",[t._v("未赋值的变量会返回undefined")]),t._v(" "),a("li",[t._v("如果声明了一个对象，但是暂时不想为其赋值，可以先为其赋值为null，表明该变量是一个对象。反之，如果声明的是一个非对象，则先将其声明为undefined，表明该变量是一个非对象")])]),t._v(" "),a("p",[t._v("上面的第二点只是惯例，并非规则。但是也可以直接这样说，"),a("strong",[t._v("null表示空对象，undefined表示空非对象。")])]),t._v(" "),a("h3",{attrs:{id:"_5、对象（object）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、对象（object）","aria-hidden":"true"}},[t._v("#")]),t._v(" 5、对象（object）")]),t._v(" "),a("p",[t._v("对象就是一组“键值对”（key-value）的集合，是一种无序的复合数据集合。可以将对象看成是一个哈希表。对象（object）是 JavaScript 语言的核心概念，也是最重要的数据类型。")]),t._v(" "),a("p",[t._v("除object外的几种类型都成为基本类型，object则被称为复杂类型。复杂类型是由简单类型组成的。如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'frank'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("对象即是简单类型的组合。可以这样获取对象中的值：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("注意其中的name是要加单引号的，否则就会引入变量name的值。")]),t._v(" "),a("p",[t._v("对象中可以包含另一个对象，也可以在对象中引入自己，如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'frank'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    self"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("person\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("对象中的key可以为空字符串，如''='frank'，引用方法：person['']='frank'.")]),t._v(" "),a("p",[t._v("在变量中，如果key不加引号，就必须符合标识符原则，key在不加引号的情况下就要以变量名的命名要求去要求它。比如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a b'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//符合要求")]),t._v("\n a b  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//会报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//符合要求")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("a  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//会报错")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("如果key符合标识符规范，如person['name']，就可以改写为 person. name。")]),t._v(" "),a("h2",{attrs:{id:"一些操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 一些操作")]),t._v(" "),a("p",[t._v("下面是关于数据类型这一节的操作技巧。")]),t._v(" "),a("h3",{attrs:{id:"_1、删除key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、删除key","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、删除key")]),t._v(" "),a("p",[t._v("delete命令用于删除对象的属性，删除成功后返回true")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("delect person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\nperson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("其中的in运算符用于检查对象是否包含某个属性（注意，检查的是键名，不是键值），如果包含就返回true，否则返回false。")]),t._v(" "),a("p",[t._v("如果这样操作：person.name=undefined。这样只会将undefined赋值给name，但是person在的key仍有name，并没有删除key。")]),t._v(" "),a("h3",{attrs:{id:"_2、遍历对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、遍历对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 2、遍历对象")]),t._v(" "),a("p",[t._v("遍历对象中的key：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   age")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("但是如果要遍历对象中的值并不能写成console.log(person.key)。因为这样表示的是console.log(person['key'])。应该这样写：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → name frank")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   age 18")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_3、type-of运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、type-of运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3、type of运算符")]),t._v(" "),a("p",[t._v("type of可以确定一个值到底是什么类型。如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ss"')]),t._v("\ntype "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\ntype "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boolean"')]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ntype "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("但是有以下三种特殊情况：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntype "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\ntype "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ntype "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("上面代码中，空数组（[]）的类型也是 object，这表示在 JavaScript 内部，数组本质上只是一种特殊的对象。null返回object的原因是最开始null只被当做object的一种特殊值，后面才被单独看做数据类型。")]),t._v(" "),a("p",[t._v("type of 一个函数会返回function，但是function并不是一种数据类型，而是对象，按理来说应该返回object，所以这个特殊情况可以看做是type of 的一个bug。")]),t._v(" "),a("hr"),t._v(" "),a("div",{staticStyle:{"text-align":"center"}},[t._v("![划水](20181012A/划水.jpg)")]),t._v("\n以上就是课上讲述到的关于JS的数据类型的所有内容。博客篇幅比较冗长，写起来花了一些时间，文采也不怎么样，感觉有点像划水，但是也算是起到了复习的作用，笔记也没白记，自己也获得得了一些成就感。")])},[],!1,null,null,null);s.default=n.exports}}]);